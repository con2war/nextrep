// This is your Prisma schema file
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




generator client {
  provider = "prisma-client-js"
}

// Define the models
model User {
  id              String    @id // Auth0 user ID
  email           String    @unique
  name            String?
  workouts        Workout[]
  favoriteWorkouts FavoriteWorkout[]
  completedWorkouts CompletedWorkout[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Workout {
  id            String    @id @default(cuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  date          DateTime  @default(now())
  duration      String
  type          String    
  name          String?
  exercises     Json      // Structured as: { warmup: [], mainWorkout: [], cooldown: [] }
  targetMuscles String[]
  difficulty    String
  favorites     FavoriteWorkout[]
  completions   CompletedWorkout[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([userId])
  @@index([type])
}

model FavoriteWorkout {
  id        String   @id @default(cuid())
  userId    String
  workoutId String
  user      User     @relation(fields: [userId], references: [id])
  workout   Workout  @relation(fields: [workoutId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, workoutId])
  @@index([userId])
}

model CompletedWorkout {
  id          String   @id @default(cuid())
  userId      String
  workoutId   String?
  workout     Workout? @relation(fields: [workoutId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
  type        String
  duration    String?
  rating      Int?
  notes       String?
  exercises   Json?
  completedAt DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([workoutId])
}
